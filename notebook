
.summary 20191009
 Image processing in OpenCV
 .Changing Colorspaces
    cv2.cvtColor(),
    cv2.inRange() 判断一些点的颜色是否在某个范围内，返回一个0,1矩阵，可用作掩码。
　　cv2.bitwise_* 对像素点进行位操作
　　BGR 颜色空间与其他颜色空间的转化技巧：green = np.uint8([0,255,0]) hsvgreen=cv2.cvtColor(green,cv2.COLOR_BGR2HSV)
 .Geometric(几何的) Transformations of Images
　　cv2.resize()改变图像的大小，用算法对图像缩放处理
　　cv2.wrapAffine() 仿射变换。在向量空间中进行一次线性变换（乘以一个矩阵）加上一个平移。矩阵实例：M = np.float32([1,0,100],[0,1,50]), 合适的矩阵可以实现图像的旋转效果，cv2.getRotationMatrix2D((centerX,centerY),degree,scale)函数可以得到这样的一个矩阵。合适的矩阵可以实现图像的不规则变形（三个点的坐标变换到另一组新的位置），这个矩阵也可以用过cv2.getAffineTransform(oldPos,newPos)得到。
　　cv2.warpPerspective() 透视变换。基于透视原理进行图像的变换（至少需要四个点的对应位置），有点类似用上面的getAffineTransform得到的矩阵进行的放射变换。

 .Image Thresholding(阈值)
　　cv2.threshold(img,127,255,cv2.THRESH_BINARY)
    区别：
    THRESH_BINARY:当前点值大于阈值时，取Maxval,否则取０
    THRESH_BINARY_INV: 当前点值大于阈值时，取０,否则取Maxval
    THRESH_TRUNC:当前点值大于阈值时，设置为阈值，否则不改变
    THRESH_TOZERO: 当前点值大于阈值时，不改变，否则设置为0
    THRESH_TOZERO_INV: 当前点值大于阈值时，设置为0，否则不改变
    THRESH_MASK:
    THRESH_OTSU: 自适应阈值，可与其他选项或。
    THRESH_TRIANGLE:用三角算法选取阈值，可与其他选项或，不用自己指定阈值。

　　自适应的阈值算法
　　cv2.adaptiveThreshold(img,255,cv2.ADAPTIVE_THRESH_MEAN_C,cv2.THRESH_BINARY or THRESH_BINARY_INV,blockSize,c)
　　ADAPTIVE_THRESH_MEAN_C：局部邻域块的均值，减去常数C
　　ADAPTIVE_THRESH_GAUSSIAN_C：局部邻域块的高斯加权和，减去常数C


 .Smoothing Images
 .Morphological(形态) Transformations
 .Image Gradients(梯度)
 .Canny Edge Detection
 .Image Pyramids
 .Contours(外形，轮廓，等高线) in OpenCV
 .Histograms(直方图) in OpenCV
 .Image Transforms in OpenCV
 .Template Matching
 .Hough Line Transform
 .Hough Circle Transform
 .Image Segmentation with Watershed(分水岭，转折点) Algorithm
 .Interactive(互动的) Foreground Extraction using GrabCut(抓斗) Algorithm

.反向投影
　image=
  0  1  2  3
  4  5  6  7
  8  9 10 11
  8  9 14 15
  Histogram = 4 4 6 2 （bin的区间为[0,3],[4,7],[8,11],[12,16]）
  反向投影back_project=
  4 4 4 4
  4 4 4 4
  6 6 6 6
  6 6 2 2
　根据图像每个点所在直方图中的位置，用直方图中对应的值设置为像素点对应的值。
　一幅图像的反向投影利用了其原始图像（或目标区域）的直方图，将该直方图作为一张查找表来找对应像素点的像素值，即将目标图像像素点的值设置为原始图像（或目标区域）直方图上对应的bin值。该bin值代表了（目标区域）上该像素值出现的概率。从而得到一幅图像的概率值。从而我们可以通过这幅概率图可以得知在这幅图像中，目标出现可能出现的位置。
 肤色检查中效果明显




Raspberry pi 4
. Download OS image(with desktop) from official website
. Formate SD card with SD Card formatter tool
. Write OS image downloaded in step 1 with Win32DiskImager
. Start Raspberry pi
. HDMI 0 will display desktop and begin to set up
. run Raspberry Pi Configuration from raspberry menu in left-top
. select Interface tab, and enable ssh and vnc 

Install OpenCV
. python3 and python2 are installed already
. sudo apt-update
. apt list python*opencv*, below list shows an OpenCV version for raspberry Pi4:
	python-opencv-apps/stable 1.12.0-2 all
	python-opencv/stable 3.2.0+dfsg-6 army
	python3-opencv-apps/stable 1.12.0-2 all
	python3-opencv/stable,now 3.2.0+dfsg-6 army
. Install OpenCV: sudo apt install python3-opencv
. try again and again if it failed because missing some package.

Solve the problem of "Cannot currently show the dekstop"
. Log in Raspberry Pi4
. sudo rasps-config
. change the resolution to a lower value and connect VNC again.

how to get the CPU temperature?
cat /sys/class/thermal/thermal_zone0/temp

how to add a user and change his group information?
 sudo adduser XXX
 sudo usermod -a -G GROUPNAME USERNAME
 reboot it to take effect

how to use an existed conda python environment in pycharm?
. select "Existing interpreter" for "Project interpreter",select the python which located in conda environment path, for example: /home/XXXX/anaconda3/bin/python 
